unit SettingsUnit;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ComCtrls, JPEG,
  Vcl.ExtDlgs, Vcl.ExtCtrls;



type
    TLanguages = (ENG, RUS);

  TSettingsForm = class(TForm)
    LanguagesBox: TComboBox;
    LngLabel: TLabel;
    SaveSettingsButton: TBitBtn;
    AboutButton: TBitBtn;
    SettingsLabel: TLabel;
    Panel1: TPanel;
    procedure SaveSettingsButtonClick(Sender: TObject);
    procedure SetLanguage(Language: TLanguages);
    procedure LoadSettings();
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  SettingsForm: TSettingsForm;
  Language: TLanguages;

implementation

{$R *.dfm}

uses
    MainUnit, CreatePlaylistUnit, RenamePlaylistUnit;

const
    RUS_LNG = 'RUS';
    ENG_LNG = 'ENG';

procedure TSettingsForm.LoadSettings();
begin
    LanguagesBox.Clear;
    LanguagesBox.Items.Add('Русский');
    LanguagesBox.Items.Add('English');
    if Language = ENG then
        LanguagesBox.Text := 'English'
    else
        LanguagesBox.Text := 'Русский';
end;

procedure TSettingsForm.SaveSettingsButtonClick(Sender: TObject);
var
    CfgFile: TextFile;
begin
    if Length(LanguagesBox.Text) <> 0 then
    begin
        AssignFile(CfgFile, ExeDirectory + '\settings.cfg');
        Rewrite(CfgFile);
        if LanguagesBox.Text = 'Русский' then
            Write(CfgFile, RUS_LNG)
        else
            Write(CfgFile, ENG_LNG);
        CloseFile(CfgFile);
    end;
    SetLanguage(ENG);
    MessageBox(Handle, PChar('Изменения успешно сохранены'), PChar('Настройки'), MB_OK + MB_ICONINFORMATION);
end;

////////////////////////////LOCALIZATION////////////////////////////////////////

procedure TSettingsForm.SetLanguage(Language: TLanguages);
begin
    if Language = ENG then
    begin
        Caption := 'Settings';
        SettingsLabel.Caption := 'SETTINGS';
        LngLabel.Caption := 'Language';
        AboutButton.Caption := 'About program';
        SaveSettingsButton.Caption := 'Save settings';

        with MainForm do
        begin
            PlaylistLabel.Caption := 'PLAYLISTS';
            NowPlayLabel.Caption := 'Now play:';

            RepeatButton.Hint := 'Loop track';
            MuteButton.Hint := 'Mute sound';
            ShowPlaylistsButton.Hint := 'Show playlists';
            SettingsButton.Hint := 'Settings';

            CreatePlaylistButton.Hint := 'Create playlist';
            AddPlaylistButton.Hint := 'Add playlist';
            DeletePlaylistButton.Hint := 'Delete playlist';
            UpdatePlaylistsButton.Hint := 'Update playlists';

            BackButton.Hint := 'Back';
            AddMusicButton.Hint := 'Add track';
            DeleteMusicButton.Hint := 'Delete track';
            UpdateTracksButton.Hint := 'Update tracks';

            RenamePlaylistButton.Hint := 'Rename';
            ChangeCoverButton.Hint := 'Change cover';
        end;

        with CreatePlaylistForm do
        begin
            Caption := 'Create playlist';
            NameLabel.Caption := 'Name';
            CoverLabel.Caption := 'Cover';
            TracksLabel.Caption := 'Tracks';
            AddMusicButton.Hint := 'Add track';
            DeleteButton.Hint := 'Delete track';
            LoadButton.Caption := 'Load';
            CreateButton.Caption := 'Create';
            CancelButton.Caption := 'Cancel';
        end;

        with RenamePlaylistForm do
        begin
            Caption := 'Rename';
            NameLabel.Caption := 'Enter the name';
            SaveButton.Caption := 'Save';
            CancelButton.Caption := 'Cancel';
        end;

    end
    else
    begin

    end;
end;

end.
