unit HeaderInfo;

interface

uses
   Classes, SysUtils;

const
   TAG_VERSION_2_3 = 3;
   ID3V2_FRAME_COUNT = 7;

type
    TagInfo = record
     ID: array [1..3] of AnsiChar;
     Version: Byte;
     Revision: Byte;
     Flags: Byte;
     Size: array [1..4] of Byte;
     FileSize: Integer;
     Frame: array [1..ID3V2_FRAME_COUNT] of string;
   end;

   THeaderInfo = class(TObject)
       function ReadHeader(const FileName: string; var Tag: TagInfo): Boolean;
   end;


var
    HeaderInf: THeaderInfo;

implementation

uses
    MainUnit;


function ReadHeader(const FileName: string; var Tag: TagInfo): Boolean;
var
   SourceFile: file;
   Transferred: Integer;
begin
   try
     Result := true;
     { Set read-access and open file }
     AssignFile(SourceFile, FileName);
     FileMode := 0;
     Reset(SourceFile, 1);
     { Read header and get file size }
     BlockRead(SourceFile, Tag, 10, Transferred);
     Tag.FileSize := FileSize(SourceFile);
     CloseFile(SourceFile);
     { if transfer is not complete }
     if Transferred < 10 then Result := false;
     if Tag.ID <> 'ID3' then Result := false;
   except
     { Error }
     Result := false;
   end;
end;
end.
